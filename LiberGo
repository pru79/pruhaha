#!/bin/sh
cd /root
rm -rf Downloads LiberBackup dotyPakaRaduLiber libernetview
mkdir LiberBackup
cp /etc/rc.local LiberBackup
wget https://raw.githubusercontent.com/pru79/pruhaha/refs/heads/main/dotyPakaRaduLiber
bash dotyPakaRaduLiber
opkg install php8-cgi
wget https://raw.githubusercontent.com/pru79/pruhaha/refs/heads/main/libernetview
bash libernetview
sh -c 'f=/etc/rc.local; [ -f "$f" ] || touch "$f"; [ -r "$f" ] || exit 1; h=$(head -n1 "$f" 2>/dev/null); case "$h" in "#!/bin/sh -e") : ;; "#!/bin/sh") sed -i "1s|^#!/bin/sh$|#!/bin/sh -e|" "$f" ;; *) sed -i "1i #!/bin/sh -e" "$f" ;; esac; grep -q "^exit 0$" "$f" || printf "\nexit 0\n" >> "$f"
sed -i "/^exit 0$/i export LIBERNET_DIR="/root/libernet" && screen -AmdS libernet /root/libernet/bin/service.sh -as\\n/bin/libermon &" "$f"; chmod +x "$f"'
uci set network.lan.dns=8.8.8.8
if uci -q get network.wan > /dev/null; then
  uci set network.wan.metric='19'
elif uci -q get network.wwan0 > /dev/null; then
  uci set network.wwan0.metric='19'
else
  echo "Neither network.wan nor network.wwan0 found"
  exit 1
fi
uci commit network
cat > /bin/uninstallLiber <<'EOF'
cp LiberBackup/rc.local /etc
rm -rf Downloads/ LiberGo dotyPakaRaduLiber
EOF
chmod +x /bin/uninstallLiber
cat > /bin/libermon <<'EOF'
#!/bin/sh -e

URL_DOMAIN="www.google.com"    # Stable, known-good domain to resolve [adjust if needed]
DNS_SERVER="127.0.0.1"         # Query local resolver to avoid third-party reliance
INTERVAL=5                     # Seconds between checks
FAIL_LIMIT=3                   # Restart after 3 consecutive failures
NS_TIMEOUT=1                   # nslookup timeout (seconds)

fail_count=0

log() {
  logger -t libernet-watchdog "$@"
}

dns_ok() {
  # Fast DNS health check via local resolver with tight timeout
  # Success = exit 0 and has an address line
  # BusyBox nslookup prints to stdout; suppress and use exit code only
  nslookup -timeout="$NS_TIMEOUT" "$URL_DOMAIN" "$DNS_SERVER" >/dev/null 2>&1
}

while true; do
  if dns_ok; then
    if [ "$fail_count" -gt 0 ]; then
      log "Internet OK via DNS (failure streak reset from $fail_count)"
      fail_count=0
    else
      log "Internet OK via DNS"
    fi
  else
    fail_count=$((fail_count + 1))
    if [ "$fail_count" -lt "$FAIL_LIMIT" ]; then
      log "DNS lookup failed (streak $fail_count/$FAIL_LIMIT); waiting..."
    else
      log "DNS lookup failed (streak $fail_count/$FAIL_LIMIT); restarting Libernet"
      /root/libernet/bin/service.sh -ds || true
      ifdown wan 2>/dev/null || true
      ifup wan 2>/dev/null || true
      sleep 15
      /root/libernet/bin/service.sh -sl || true
      sleep 5
      fail_count=0
    fi
  fi
  sleep "$INTERVAL"
done
EOF
chmod +x /bin/libermon
cat > /root/libernet/bin/config/ssh/Unifi.json <<'EOF'
{
"ip": "104.17.148.22",
"host": "www.speedtest.net",
"port": 80,
"username": "userid",
"password": "SangatSulit",
"udpgw": {
"ip": "127.0.0.1",
"port": 7300
},
"enable_http": true,
"http": {
"buffer": 32767,
"ip": "127.0.0.1",
"port": 9876,
"info": "HTTP Proxy",
"payload": "GET /cdn-cgi/trace HTTP/1.1[crlf]Host: [host][crlf][crlf]CF-RAY / HTTP/1.1[crlf]Host:sshws-host-disini[crlf]Upgrade: websocket[crlf]Connection: upgrade[crlf][crlf]",
"proxy": {
"ip": "www.speedtest.net",
"port": 80
}
}
}
EOF
cat > /root/libernet/bin/config/ssh/Hotlink.json <<'EOF'
{
    "ip": "103.151.12.195",
    "host": "lanunmyklnet1.ezcode.shop",
    "port": 80,
    "username": "username",
    "password": "password",
    "udpgw": {
        "ip": "127.0.0.1",
        "port": 7300
    },
    "enable_http": true,
    "http": {
        "buffer": 32767,
        "ip": "127.0.0.1",
        "port": 9876,
        "info": "HTTP Proxy",
        "payload": "GET /cdn-cgi/trace HTTP/1.1[crlf]Host: mgm.maxis.com.my[crlf][crlf][split]STRX / HTTP/1.1[crlf]Host: [host][crlf]Upgrade: websocket[crlf][crlf]",
        "proxy": {
            "ip": "genglanun.siteintercept.qualtrics.com",
            "port": 80
        }
    }
EOF
ifdown wan;ifup wan
echo
echo "#################"
echo "Libernet siyyyap!"
echo "#################"
echo
