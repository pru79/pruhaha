#!/bin/sh

# Function to check if a command executed successfully
check_command() {
    if [ $? -ne 0 ]; then
        echo "Error: Command failed: $1"
        exit 1
    fi
}

# Check conditions from files 'k' and 'l'
if [ "$(cat /root/k)" != 1 ] && [ "$(cat /root/l)" != 1 ]; then
    clear
    echo "Setup will reboot, please reconnect terminal after reboot to resume WGCF setup"

    # Modify uci settings for initial setup
    uci batch <<'E'
    set profile.default.pdptype='IPV6'
    set profile.default.apn='hos'
    commit
E

    # Update files 'k' and 'l'
    echo "1" > /root/k
    echo "0" > /root/l

    # Run specific commands for setup
    /usr/lib/rooter/gcom/gcom-locked /dev/ttyUSB2 run-at.gcom 1 'AT+QCFG="usbnet",2'
    echo "Rebooting Arcadyan.."
    sleep 10
    reboot
else
    # If conditions are not met, continue with setup
    echo "1" > /root/l

    echo "Resuming WGCF setup, please wait for 3 minutes.."

    # Wait until IPv6 connection is established
    while ! ping6 -c 1 2001:4860:4860::8888 >/dev/null 2>&1; do
        sleep 1
    done

    echo "IPv6 connection established."
# Install necessary packages and configure WireGuard
    if ping6 -c 1 google.com >/dev/null 2>&1; then
        /etc/init.d/sysntpd restart
        rm -rf wgcf wgcf.gz /bin/wgcf
        wget --no-check-certificate https://raw.githubusercontent.com/pru79/pruhaha/main/wgcf.gz
        check_command "wget wgcf"
        gunzip -f wgcf.gz
        mv wgcf /bin
        chmod a+x /bin/wgcf
        sleep 5
        echo | wgcf register
        wgcf generate

        # Extract PrivateKey and Address from 'wgcf-profile.conf'
        p=$(awk -F ' = ' '/PrivateKey/ {print $2}' wgcf-profile.conf)
        v=$(grep -E "^Address = ([0-9a-fA-F:]+/[0-9]+)$" wgcf-profile.conf | grep -Eo '([0-9a-fA-F:]+/[0-9]+)')

        # Configure WireGuard interface using uci
        uci batch <<E
        set network.wgcf=interface
        set network.wgcf.proto='wireguard'
        set network.wgcf.private_key='$p'
        set network.wgcf.addresses='172.16.0.2/32'
        add_list network.wgcf.addresses='$v'
        set network.wgcf.mtu='1200'
        add network wireguard_wgcf
        set network.@wireguard_wgcf[0]=wireguard_wgcf
        set network.@wireguard_wgcf[0].public_key='bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo='
        set network.@wireguard_wgcf[0].allowed_ips='0.0.0.0/0'
        add_list network.@wireguard_wgcf[0].allowed_ips='::/0'
        set network.@wireguard_wgcf[0].route_allowed_ips='1'
        set network.@wireguard_wgcf[0].endpoint_host='2606:4700:d0::a29f:c001'
        set network.@wireguard_wgcf[0].endpoint_port='2408'
        set network.@wireguard_wgcf[0].persistent_keepalive='0'
        commit
E

        # Add 'wgcf' to firewall zone network
        en=$(uci get firewall.@zone[1].network)
        for net in $en; do
            uci add_list firewall.@zone[1].network=$net
        done
        uci add_list firewall.@zone[1].network=wgcf
    fi
# Commit uci changes and restart WAN6 interface
    uci commit
    ifdown wan6 && sleep 5 && ifup wan6

    # Wait until WAN connectivity is restored
    while ! ping -c 1 -W 1 1.1.1.1 >/dev/null 2>&1; do
        sleep 1
    done
# Create script 'rewg' for WAN recovery
    cat <<'E' >/bin/rewg
    n=0
    m=0rm -rf wgcf-*
# The IPv6 address to ping
IPV6_ADDRESS="2a00:1098:2b::1"

# Function to check if the ping gets a reply
check_ping() {
    ping6 -c 1 -w 2 $IPV6_ADDRESS > /dev/null 2>&1
    return $?
}

# Loop until the ping gets a reply
while ! check_ping; do
    echo "Ping to $IPV6_ADDRESS failed. Waiting..."
    sleep 5  # Wait for 5 seconds before retrying
done
echo "nameserver 2a00:1098:2b::1" >/etc/resolv.conf
echo | wgcf register
wgcf generate
p=$(awk -F ' = ' '/PrivateKey/ {print $2}' wgcf-profile.conf)
v=$(grep -E "^Address = ([0-9a-fA-F:]+/[0-9]+)$" wgcf-profile.conf | grep -Eo '([0-9a-fA-F:]+/[0-9]+)')
uci batch <<E2
set network.wg0=interface
set network.wg0.auto='1'
set network.wg0.proto='wireguard'
set network.wg0.private_key='$p'
set network.wg0.addresses='172.16.0.2/32'
add_list network.wg0.addresses='$v'
set network.wg0.mtu='1200'
add network wireguard_wg0
set network.@wireguard_wg0[0]=wireguard_wg0
set network.@wireguard_wg0[0].public_key='bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo='
set network.@wireguard_wg0[0].allowed_ips='0.0.0.0/0'
add_list network.@wireguard_wg0[0].allowed_ips='::/0'
set network.@wireguard_wg0[0].route_allowed_ips='1'
set network.@wireguard_wg0[0].endpoint_host='2606:4700:d0::a29f:c001'
set network.@wireguard_wg0[0].endpoint_port='2408'
set network.@wireguard_wg0[0].persistent_keepalive='0'
commit network
E2
uci set firewall.@zone[1].network='wan wan6 openvpn wg0'
uci commit firewall
echo "try aktifkan wg jap.."
ifdown wgcf && sleep 1 && ifup wgcf
E

    chmod +x /bin/rewg;sed -i '/^exit 0/i /bin/rewg' /etc/rc.local

    # Modify 'resolv.conf' for DNS settings
    echo -e "search lan\nnameserver 127.0.0.1" > /etc/resolv.conf

    echo "WGCF setup complete!"

    ping 1.1.1.1
    echo "."
fi
